"""game tag and cascades

Revision ID: d793e8398c47
Revises: d23469c49594
Create Date: 2024-12-20 15:32:06.182739

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d793e8398c47"
down_revision: Union[str, None] = "d23469c49594"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "game_tag",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "game_tag_link",
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["game_id"], ["game.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["tag_id"], ["game_tag.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("game_id", "tag_id"),
    )
    op.drop_constraint("game_creator_id_fkey", "game", type_="foreignkey")
    op.drop_constraint("game_city_id_fkey", "game", type_="foreignkey")
    op.create_foreign_key(None, "game", "city", ["city_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        None, "game", "user", ["creator_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(
        "game_application_game_id_fkey", "game_application", type_="foreignkey"
    )
    op.drop_constraint(
        "game_application_user_id_fkey", "game_application", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "game_application", "user", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "game_application", "game", ["game_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("game_member_user_id_fkey", "game_member", type_="foreignkey")
    op.drop_constraint("game_member_game_id_fkey", "game_member", type_="foreignkey")
    op.create_foreign_key(
        None, "game_member", "game", ["game_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        None, "game_member", "user", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint("user_city_id_fkey", "user", type_="foreignkey")
    op.create_foreign_key(None, "user", "city", ["city_id"], ["id"], ondelete="CASCADE")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user", type_="foreignkey")
    op.create_foreign_key("user_city_id_fkey", "user", "city", ["city_id"], ["id"])
    op.drop_constraint(None, "game_member", type_="foreignkey")
    op.drop_constraint(None, "game_member", type_="foreignkey")
    op.create_foreign_key(
        "game_member_game_id_fkey", "game_member", "game", ["game_id"], ["id"]
    )
    op.create_foreign_key(
        "game_member_user_id_fkey", "game_member", "user", ["user_id"], ["id"]
    )
    op.drop_constraint(None, "game_application", type_="foreignkey")
    op.drop_constraint(None, "game_application", type_="foreignkey")
    op.create_foreign_key(
        "game_application_user_id_fkey", "game_application", "user", ["user_id"], ["id"]
    )
    op.create_foreign_key(
        "game_application_game_id_fkey", "game_application", "game", ["game_id"], ["id"]
    )
    op.drop_constraint(None, "game", type_="foreignkey")
    op.drop_constraint(None, "game", type_="foreignkey")
    op.create_foreign_key("game_city_id_fkey", "game", "city", ["city_id"], ["id"])
    op.create_foreign_key(
        "game_creator_id_fkey", "game", "user", ["creator_id"], ["id"]
    )
    op.drop_table("game_tag_link")
    op.drop_table("game_tag")
    # ### end Alembic commands ###
